---
version: "3"

services:
  flog:
    image: mingrammer/flog
    command: -f json -d 1s -l

  # Example nginx - flask - mysql app from:
  # https://github.com/docker/awesome-compose/blob/master/nginx-flask-mysql/compose.yaml
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:10-focal
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8
    command: '--default-authentication-plugin=mysql_native_password'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
      interval: 3s
      retries: 5
      start_period: 30s
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backnet
    environment:
      - MYSQL_DATABASE=example
      - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    expose:
      - 3306
      - 33060

  backend:
    build:
      context: nginx-flask-mysql/backend
      target: builder
    restart: always
    secrets:
      - db-password
    ports:
      - 8000:8000
    networks:
      - backnet
      - frontnet
    depends_on:
      db:
        condition: service_healthy

  proxy:
    build: nginx-flask-mysql/proxy
    restart: always
    ports:
      - 80:80
    depends_on: 
      - backend
    networks:
      - frontnet

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    expose:
      - 9113
    command: -nginx.scrape-uri=http://proxy:80/stub_status
    depends_on:
      - proxy
    networks:
      - frontnet

volumes:
  db-data:

secrets:
  db-password:
    file: nginx-flask-mysql/db/password.txt

networks:
  backnet:
  frontnet:
